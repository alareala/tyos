#include<iostream>
using namespace std;

const int MAX_PROCESSES = 10;

int main() {
    int n, bt[MAX_PROCESSES], at[MAX_PROCESSES], priority[MAX_PROCESSES], wt[MAX_PROCESSES], tat[MAX_PROCESSES], done[MAX_PROCESSES] = {0};
    
    cout << "Enter the number of processes: ";
    cin >> n;
    
    cout << "Enter burst time, arrival time, and priority for each process:\n";
    for (int i = 0; i < n; i++) {
        cin >> bt[i] >> at[i] >> priority[i];
    }

    int currentTime = 0;
    int totalWaitingTime = 0;
    int totalTurnaroundTime = 0;

    // Non-preemptive Priority Scheduling
    for (int i = 0; i < n; i++) {
        int highestPriority = INT_MAX, highestPriorityProcess = -1;
        for (int j = 0; j < n; j++) {
            if (!done[j] && at[j] <= currentTime && priority[j] < highestPriority) {
                highestPriority = priority[j];
                highestPriorityProcess = j;
            }
        }

        if (highestPriorityProcess == -1) {
            currentTime++;
            i--; // No process was ready to execute at this time, so decrement i to stay at the same time.
        } else {
            wt[highestPriorityProcess] = currentTime - at[highestPriorityProcess];
            tat[highestPriorityProcess] = wt[highestPriorityProcess] + bt[highestPriorityProcess];
            done[highestPriorityProcess] = 1;
            currentTime += bt[highestPriorityProcess];
            totalWaitingTime += wt[highestPriorityProcess];
            totalTurnaroundTime += tat[highestPriorityProcess];
        }
    }

    cout << "\nProcess\tBurst Time\tArrival Time\tPriority\tWaiting Time\tTurnaround Time\n";
    for (int i = 0; i < n; i++) {
        cout << "P" << i + 1 << "\t" << bt[i] << "\t\t" << at[i] << "\t\t" << priority[i] << "\t\t" << wt[i] << "\t\t" << tat[i] << endl;
    }

    float averageWaitingTime = float(totalWaitingTime) / n;
    float averageTurnaroundTime = float(totalTurnaroundTime) / n;
    cout << "\nAverage Waiting Time: " << averageWaitingTime << endl;
    cout << "Average Turnaround Time: " << averageTurnaroundTime << endl;

    return 0;
}
