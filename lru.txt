#include <iostream>
#include <queue>
#include <unordered_set>
using namespace std;

class LRUPageReplacement
{
private:
    int frameCount;
    int arr[1000];
    int current = 0;
    int past = 0;
    int page[1000];

public:
    LRUPageReplacement(int frames,int pageReference[],int pageCount)
    {
        frameCount = frames;
        for (int i = 0; i < frames; i++)
        {
            arr[i]=-1;
        }
        for (int i = 0; i < pageCount; i++)
        {
            page[i] = pageReference[i];
        }
        
        
    }

    void replacePages(int pages)
    {

        cout << endl;
        for (int i = 0; i < frameCount; ++i)
        {
            if (pages == arr[i])
            {
                cout << "No replcement";
                past++;
                return;
            }
        }
        if (current >= 0 && current <= frameCount-1)
        {
            arr[current] = pages;
            current++;
            past++;
        }
        else
        {
            int distance[frameCount];
            for (int i = 0; i < frameCount; i++)
            {
                distance[i] = 0;
            }
            
            // cout<<past<<endl;
            for (int i = 0; i <= frameCount-1; i++)
            {
                for (int j = past ; j >= 0; j--)
                {
                    if (arr[i] == page[j])
                    {
                        // cout<<arr[i]<<" "<<page[j]<<endl;
                        distance[i] = j;
                        // cout<<distance[i]<<endl;
                        break;
                    }
                }
            }
            int min = 10000;
            int index;
            for (int i = 0; i < frameCount; i++)
            {
                if (distance[i] < min)
                {
                    min = distance[i];
                    index = i;
                }
            }
            arr[index] = pages;
            past++;
        }
        for (int i = 0; i < frameCount; ++i)
        {
            cout << arr[i];
        }
    }
};

int main()
{
    int numofpages;
    cout<<"Enter number of pages: ";
    cin>>numofpages;

    int pageReference[numofpages];

    for(int i=0;i<numofpages;i++){
        cin>>pageReference[i];
    }

    int frameCount ;
    cout<<"Enter the Frame count: ";
    cin>>frameCount;
    cout<<endl;
    int pageCount = sizeof(pageReference) / sizeof(pageReference[0]);
    LRUPageReplacement fif(frameCount,pageReference,pageCount);
    for (int i = 0; i < pageCount; i++)
    {
        fif.replacePages(pageReference[i]);
    }

    return 0;
}
